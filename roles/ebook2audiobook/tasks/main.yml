---
- name: Start ebook2audiobook
  block:
    - name: Create ebook2audiobook Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ ebook2audiobook_data_directory }}"
        - "{{ ebook2audiobook_data_directory }}/audiobooks"
        - "{{ ebook2audiobook_audiobooks_directory }}"
        - - "{{ ebook2audiobook_audiobooks_directory }}/temp"

    - name: ebook2audiobook Docker Container
      community.docker.docker_container:
        name: "{{ ebook2audiobook_container_name }}"
        image: "{{ ebook2audiobook_image_name }}:{{ ebook2audiobook_image_version }}"
        pull: true
        volumes:
          - "{{ ebook2audiobook_books_directory }}:/app/input_folder:rw"
          - "{{ ebook2audiobook_audiobooks_directory }}:/app/audiobooks:rw"
          - "{{ ebook2audiobook_audiobooks_directory }}/temp:/app/temp:rw"
          - "{{ ebook2audiobook_data_directory }}:/config:rw"
        ports:
          - "{{ ebook2audiobook_port }}:7860"
        # network_mode: "container:{{ gluetun_container_name }}"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ ebook2audiobook_user_id }}"
          PGID: "{{ ebook2audiobook_group_id }}"
        restart_policy: unless-stopped
        device_requests:
          - capabilities: [["gpu"]]
        memory: "{{ ebook2audiobook_memory }}"
        labels:
          traefik.enable: "{{ ebook2audiobook_available_externally | string }}"
          traefik.http.routers.ebook2audiobook.rule: "Host(`{{ ebook2audiobook_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.ebook2audiobook.tls.certresolver: "letsencrypt"
          traefik.http.routers.ebook2audiobook.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.ebook2audiobook.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.ebook2audiobook.loadbalancer.server.port: "8787"
          homepage.group: "Download Tools"
          homepage.name: "ebook2audiobook"
          homepage.icon: "ebook2audiobook"
          homepage.href: "http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ ebook2audiobook_port }}"

  when: ebook2audiobook_enabled is true

- name: Stop ebook2audiobook
  block:
    - name: Stop ebook2audiobook
      community.docker.docker_container:
        name: "{{ ebook2audiobook_container_name }}"
        state: absent
  when: ebook2audiobook_enabled is false
