---
- name: Start WireGuard
  block:
    - name: Create WireGuard Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ wireguard_data_directory }}"
        - "{{ wireguard_data_directory }}/config"

    - name: Create WireGuard Docker Container
      community.docker.docker_container:
        name: "{{ wireguard_container_name }}"
        image: "{{ wireguard_image_name }}:{{ wireguard_image_version }}"
        pull: true
        volumes:
          - "{{ wireguard_data_directory }}/config:/config:rw"
          - "/lib/modules:/lib/modules"
        ports:
          - "51820:51820/udp"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ wireguard_user_id }}"
          PGID: "{{ wireguard_group_id }}"
          INTERNAL_SUBNET: "{{ wireguard_subnet }}"
          ALLOWEDIPS: "0.0.0.0/0"
          PEERS: "{{ wireguard_peers }}"
          PEERDNS: "auto"
        capabilities:
          - NET_ADMIN
          - SYS_MODULE
        sysctls:
          net.ipv4.conf.all.src_valid_mark: "1"
          net.ipv4.ip_forward: "1"
        restart_policy: unless-stopped
        memory: "{{ wireguard_memory }}"
        labels:
          traefik.enable: "{{ wireguard_available_externally | string }}"
          traefik.http.routers.wireguard.rule: "Host(`{{ wireguard_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.wireguard.tls.certresolver: "letsencrypt"
          traefik.http.routers.wireguard.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.wireguard.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.wireguard.loadbalancer.server.port: "51820"
  when: wireguard_enabled is true

- name: Stop WireGuard
  block:
    - name: Stop WireGuard
      community.docker.docker_container:
        name: "{{ wireguard_container_name }}"
        state: absent
  when: wireguard_enabled is false